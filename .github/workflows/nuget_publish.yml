name: Publish to nuget and release

on:
  push:
    branches:
      - master

jobs:

  nuget_publish:
    name: Build, pack and nuget publish
    runs-on: ubuntu-latest
    outputs:
      release_ver: ${{ steps.proj_version.outputs.assembly-version }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.x'
          
      - name: Launch unit tests
        run: dotnet test --nologo
        
      - name: Parse csproj version
        id: proj_version
        uses: kzrnm/get-net-sdk-project-versions-action@v1
        with:
          proj-path: AesIge/AesIge.csproj

      - name: NuGet publish
        id: nuget_worker
        uses: alirezanet/publish-nuget@v3.1.0
        with:
          # Filepath of the project to be packaged, relative to root of repository
          PROJECT_FILE_PATH: AesIge/AesIge.csproj

          # NuGet package id, used for version detection & defaults to project name
          # PACKAGE_NAME: AesIge

          # Filepath with version info, relative to root of repository & defaults to PROJECT_FILE_PATH
          # VERSION_FILE_PATH: Directory.Build.props

          # Regex pattern to extract version info in a capturing group
          # Version>([\d]+(.[\d]+)*)<\/\w*Version>$ - NET Core csproj regex
          VERSION_REGEX: Version>([\d]+(.[\d]+)*)<\/\w*Version>$

          # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
          # VERSION_STATIC: 1.0.0

          # Flag to toggle git tagging, enabled by default
          TAG_COMMIT: false

          # Format of the git tag, [*] gets replaced with actual version
          # TAG_FORMAT: v*

          # API key to authenticate with NuGet server
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}

          # NuGet server uri hosting the packages, defaults to https://api.nuget.org
          # NUGET_SOURCE: https://api.nuget.org

          # Flag to toggle pushing symbols along with nuget package to the server, disabled by default
          INCLUDE_SYMBOLS: false
          
  release:
    name: Make Github release
    needs: nuget_publish
    runs-on: ubuntu-latest

    steps:     
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_BUILD_TOKEN }}
          RELEASE_VERSION: ${{ needs.nuget_publish.outputs.release_ver }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: ${{ github.event.repository.name }} ${{ env.RELEASE_VERSION }}
          draft: true